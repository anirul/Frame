name: C++ CI with vcpkg and gtest

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        lfs: true
        submodules: true

    - name: Git-lfs pull
      run: |
        git lfs pull

    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          ninja-build \
          build-essential \
          libxi-dev \
          libxmu-dev \
          libx11-dev \
          libxrandr-dev \
          libxinerama-dev \
          libx11-xcb-dev \
          libxcb1-dev \
          libxcb-randr0-dev \
          libxcb-xfixes0-dev \
          libxkbcommon-dev \
          libwayland-dev \
          wayland-protocols \
          libgl1-mesa-dev \
          libglu1-mesa-dev \
          libglx-dev \
          xorg-dev \
          autoconf \
          automake \
          autoconf-archive \
          libtool \
          libtool-bin \
          libltdl-dev \
          gettext \
          pkg-config \
          gperf \
          python3-jinja2

    - name: Ensure Python Jinja2 available
      run: pip install jinja2
        
    #- name: Install Vulkan SDK
    #  run: |
    #    Invoke-WebRequest -Uri "https://sdk.lunarg.com/sdk/download/1.3.261.1/windows/VulkanSDK-1.3.261.1-Installer.exe" -OutFile "VulkanSDKInstaller.exe"
    #    Start-Process ./VulkanSDKInstaller.exe -ArgumentList "/S" -NoNewWindow -Wait
      
    - name: Bootstrap vcpkg
      run: |
        cd external/vcpkg
        ./bootstrap-vcpkg.sh
        ./vcpkg integrate install

    # No need for a manual vcpkg install step, the manifest mode will handle it

    - name: Configure with CMake Preset
      run: cmake --preset linux-release

    - name: Build with CMake Preset
      run: cmake --build --preset linux-release
        
    - name: Run tests using CTest
      run: |
        cd build/linux-release
        xvfb-run ctest --output-on-failure
