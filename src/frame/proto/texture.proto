syntax = "proto3";

import "size.proto";
import "pixel.proto";
import "plugin.proto";

package frame.proto;

// Next = 2
message TextureFilter {
	enum Enum {
		INVALID                = 0;
		NEAREST                = 1;
		LINEAR                 = 2;
		NEAREST_MIPMAP_NEAREST = 3;
		LINEAR_MIPMAP_NEAREST  = 4;
		NEAREST_MIPMAP_LINEAR  = 5;
		LINEAR_MIPMAP_LINEAR   = 6;
		CLAMP_TO_EDGE          = 7;
		MIRRORED_REPEAT        = 8;
		REPEAT                 = 9;
		CLAMP_TO_BORDER        = 10;
	}
	Enum value = 1;
}

// Next = 2
message TextureFrame {
	enum Enum {
		INVALID				   = 0;
		CUBE_MAP_POSITIVE_X	   = 1;
		CUBE_MAP_NEGATIVE_X	   = 2;
		CUBE_MAP_POSITIVE_Y	   = 3;
		CUBE_MAP_NEGATIVE_Y	   = 4;
		CUBE_MAP_POSITIVE_Z	   = 5;
		CUBE_MAP_NEGATIVE_Z	   = 6;
		TEXTURE_2D			   = 7;
	}
	Enum value = 1;
}

// CubeMap definition message.
// Next 7
message CubemapFiles {
    // Same as top.
    string positive_x = 1;
    // Same as bottom.
    string negative_x = 2;
    // Same as left.
    string positive_y = 3;
    // Same as right.
    string negative_y = 4;
    // Same as front.
    string positive_z = 5;
    // Same as back.
    string negative_z = 6;
}

// Texture
// Next 18
message Texture {
	// Name of the texture.
	string name = 1;
	// Size of the texture.
	Size size = 2;
	// Should it be a cleared texture?
	bool clear_z = 3;
	bool clear_color = 16;
    
	// Should we use mipmap?
	bool mipmap = 4;
	// Should it be a cubemap?
	bool cubemap = 5;

	// Format of the texture.
	PixelElementSize pixel_element_size = 6;
	PixelStructure pixel_structure = 7;

	// Filter for mirroring and texture sampling.
	TextureFilter min_filter = 8;
	TextureFilter mag_filter = 9;
	TextureFilter wrap_s = 10;
	TextureFilter wrap_t = 11;
	// Reserved for wrap_r in case we want to use 3D textures.
	reserved 12;

    oneof texture_oneof {
		// Pixel (if provided) not sure this is working.
		bytes pixels = 13;
		// Load from a file.
		string file_name = 14;
		// Load from a stream.
		Plugin plugin = 17;
		// Load from files, this is suppose to represent the 6 face of a cube map.
		CubemapFiles file_names = 15;
    }
}
