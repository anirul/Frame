syntax = "proto3";

import "math.proto";
import "plugin.proto";

package frame.proto;

// This is the definition of an Uniform parameter.
// These are parameters that are passed to the shader.
// Next 21
message Uniform {
	enum TypeEnum {
		INVALID_TYPE = 0;
		INT = 1;
		INT_VECTOR2 = 11;
		INT_VECTOR3 = 12;
		INT_VECTOR4 = 13;
		INT_MATRIX2 = 14;
		INT_MATRIX3 = 15;
		INT_MATRIX4 = 16;
		FLOAT = 2;
		FLOAT_VECTOR2 = 21;
		FLOAT_VECTOR3 = 22;
		FLOAT_VECTOR4 = 23;
		FLOAT_MATRIX2 = 24;
		FLOAT_MATRIX3 = 25;
		FLOAT_MATRIX4 = 26;
	}
	enum UniformEnum {
		INVALID_UNIFORM = 0;
		PROJECTION_MAT4 = 1;
		PROJECTION_INV_MAT4 = 2;
		VIEW_MAT4 = 3;
		VIEW_INV_MAT4 = 4;
		MODEL_MAT4 = 5;
		MODEL_INV_MAT4 = 6;
		FLOAT_TIME_S = 7;
	}
	// Name of the uniform (should be the same as declared in the shader!).
	string name = 1;
	// Type of the uniform (should be the same as declared in the shader!).
	TypeEnum type = 3;
	// Value of the uniform (same as before).
	oneof value_oneof {
		int32 uniform_int = 2;
		float uniform_float = 4;
		Plugin uniform_float_plugin = 19;
		Plugin uniform_int_plugin = 20;
		// This value come from outside, this could be projection or camera.
		// it will be set acording to the type of the enum.
		UniformEnum uniform_enum = 5;
		// Vectors and Matrices.
		UniformVector2 uniform_vec2 = 6;
		UniformVector3 uniform_vec3 = 7;
		UniformVector4 uniform_vec4 = 8;
		UniformQuaternion uniform_quat = 9;
		UniformMatrix4 uniform_mat4 = 10;
		UniformInts uniform_ints = 11;
		UniformFloats uniform_floats = 13;
		UniformVector2s uniform_vec2s = 14;
		UniformVector3s uniform_vec3s = 15;
		UniformVector4s uniform_vec4s = 16;
		UniformQuaternions uniform_quats = 17;
		UniformMatrix4s uniform_mat4s = 18;
	}
}
